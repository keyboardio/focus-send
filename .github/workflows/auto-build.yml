name: Automatic builds

on:
  push:
    branches:
      - main
    tags:
      - "*"

env:
  CARGO_TERM_COLOR: always

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install the rust toolchain
        run: |
          rustup toolchain install stable
          rustup default stable
          rustup component add clippy rustfmt

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y libudev-dev

      - name: Clippy
        run: cargo clippy -F build-binary

      - name: Format check
        run: cargo fmt --check

      - name: Documentation check
        run: cargo doc -F build-binary

      - name: Documentation compile check
        run: cargo test --doc -F build-binary

  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Install Rust (Linux)
        if: runner.os == 'Linux'
        run: |
          rustup toolchain install stable
          rustup default stable

      - name: Install Rust (macOS/Windows)
        if: runner.os != 'Linux'
        run: |
          rustup toolchain install stable
          rustup default stable

      - name: Install dependencies
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y libudev-dev

      - name: Test
        run: cargo test -F build-binary

      - name: Build
        run: cargo build --release -F build-binary

      - name: Prepare compressed binary (Linux)
        if: runner.os == 'Linux'
        run: |
          tar -cf - target/release/focus-send \
                    target/release/focus | \
              xz -c > target/release/kaleidoscope-focus.linux_amd64.tar.xz

      - name: Prepare compressed binary (macOS)
        if: runner.os == 'macOS'
        run: |
          tar -cf - target/release/focus-send \
                    target/release/focus | \
              xz -c > target/release/kaleidoscope-focus.macOS_amd64.tar.xz

      - name: Prepare compressed binary (Windows)
        if: runner.os == 'Windows'
        shell: bash
        run: |
          tar -cf - target/release/focus-send \
                    target/release/focus | \
              xz -c > target/release/kaleidoscope-focus.windows_amd64.tar.xz

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ runner.os }}-artifact
          path: |
            target/release/*.xz

  publish:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Snapshot release
        if: github.ref_type == 'branch'
        uses: docker://antonyurchenko/git-release:latest
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
          UNRELEASED: "update"
          RELEASE_NAME_SUFFIX: " (snapshot build)"
        with:
          args: artifacts/*/*.xz

      - name: Release
        if: github.ref_type == 'tag'
        uses: docker://antonyurchenko/git-release:latest
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
        with:
          args: artifacts/*/*.xz
